server.connection-timeout=5000
server.tomcat.max-threads=2048
server.tomcat.min-spare-threads=20
server.tomcat.max-connections=15000
server.tomcat.accept-count=500
server.port={{ application_port }}

#spring data jpa for postgres
#spring.datasource.jdbc-url={{ spring_datasource_jdbc_url }}  #### Not using WingspanDB
#spring.datasource.username={{ postgresql_username_wingspan }} #### Not using WingspanDB
#spring.datasource.password={{ postgresql_password_wingspan }} #### Not using WingspanDB

#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.show-sql=false

#Workflow - Service details
wf.service.host={{ wf_service_host }}
wf.service.updateUserProfilePath=v1/workflow/updateUserProfileWF
wf.service.transitionPath=v1/workflow/transition

#Configuration for Multi Department Mapping for User
user.enable.multidept.mapping=false

#learner.service.url=learner-service:9000
sb.service.url=http://learner-service:9000/
sb.org.search.path=v1/org/search
sb.hub.graph.service.url=http://hub-graph-service:4013

spring.data.cassandra.sb.startupTimeoutInSeconds=100000
spring.data.cassandra.sb.contact-points={{ sunbird_cassandra_db_host }}
spring.data.cassandra.sb.port=9042
spring.data.cassandra.sb.keyspace-name={{ keyspace_sunbird }}
spring.data.cassandra.sb.username=
spring.data.cassandra.sb.password=

#sunbird.course.service.host=https://staging.open-sunbird.org/api/course/
sunbird.course.service.host={{ lms_service_host }}
lms.system.settings.path=v1/system/settings/get/PatchConfig
lms.user.read.path=private/user/v1/read/
lms.user.update.path=/v1/user/update
progress.api.endpoint=v1/content/state/read
participants.api.endpoint=v1/batch/participants/list

sb.api.key={{ bearer_token }}

#ES
es.host={{ elasticsearch_host }}
es.port={{ elasticsearch_http_port }}
es.username={{ elasticsearch_username }}
es.password={{ elasticsearch_password }}
es.profile.index=userprofile
es.profile.index.type=_doc
workallocation.index.name=workallocation
workallocation.index.type=_doc
es.profile.source.fields=photo,id,employmentDetails,personalDetails

#Use alias names as Index names instead of actual index names
workallocationv2.index.name=work_allocation
workorder.index.name=work_order
workorder.index.type=_doc

## ehrms service variables

ehrms.detail.url={{ ehrms_detail_url }}
ehrms.auth.url={{ ehrms_auth_url }}
ehrms.auth.username={{ ehrms_username }}
ehrms.auth.password={{ ehrms_password }}
redis.ehrms.token.timeout=1500

#Kafka Server
spring.kafka.bootstrap.servers={{ kafka_servers_list }}

#kafka properties
kakfa.offset.reset.value=latest
kafka.max.poll.interval.ms=5000
kafka.max.poll.records=100

frac.host={{ frac_api_base }}/

domain.host.name=https://{{ domain_name }}/apis/public/v8/workallocation/getWaPdf/

#watTelemetryTopic
kafka.topics.wat.telemetry.event={{env}}.watTelemetryTopic

kafka.topics.user.registration.register.event={{env}}.user.register.event
kafka.topics.user.registration.createUser={{env}}.workflow.user.registration.createUser
kafka.topics.user.registration.auto.createUser={{env}}.user.register.createUser.event

kafka.topics.org.creation={{env}}.orgCreation
kafka.topics.course.reminder.notification.event={{env}}.course.reminder.notification.event

kafka.topics.userrole.audit={{env}}.userRoleAuditTopic
kafka.topics.parent.telemetry.event={{env}}.telemetry.raw
kafka.topics.userutility.telemetry.event={{env}}.userLastLoginTopic
kafka.topics.wat.telemetry.event.topic.consumer=watTelemetryTopic-consumer
kafka.topics.user.registration.auto.createUser.consumer.group=userAutoRegistrationTopic-consumer
kafka.topics.user.registration.createUser.consumer.group=userRegistrationTopic-consumer
kafka.topics.user.registration.register.event.consumer.group=userRegistrationRegisterEventTopic-consumer
kafka.topics.calendar.bulk.upload.event={{env}}.calendar.event.bulk.upload
kafka.topics.calendar.bulk.upload.event.group=calendarEventBulkUpload
event-create-api=/event/v4/create
event-publish-api=/event/v4/publish
event-update-api=/event/v4/update
calendar.bulk.upload.container.name=calendarBulkUpload

userutility.telemetry.event.pdata.id=dev.sunbird.cb.ext.service
userutility.telemetry.event.pdata.pid=sunbird-cb-ext-service
sunbird.cb.ext.version=4.0.1

org.create.endpoint=v1/org/create



#Cloud Storage Service properties

#Value for the type name should be “azure” in Tarento environments. In case of NIC environment it has to “cephs3”
cloud.storage.type.name={{ cloud_service_provider }}

#Storage secret for for Azure or Cephs3
cloud.storage.secret={{ cloud_storage_secret | replace('\n', '\\n')}}

#Cloud storage folder – This needs to be the newly created cloud storage folder name
cloud.container.name={{ sbext_cloud_storage_content_bucketname }}

#Endpoint for the Cephs3 environment. This can be empty in case Azure
cloud.storage.endpoint={{ cloud_storage_endpoint }}

#Storage key for the Azure or Cephs3 
cloud.storage.key={{ cloud_storage_key }}

learning_service_base_url=http://{{ learningservice_ip }}:8080/learning-service
system.content.update.url=/system/v3/content/update/

kafka.topics.parent.rating.event={{ rating_event_topic }}
redis.host.name={{ kp_redis_ip }}
redis.port=6379
#redis timeout value is in seconds
redis.timeout=84600
redis.insights.index=12
insights.label.certificates.across={0} Certificates acquired by learners in the last 24 hours.
insights.label.certificates.your.department={0} Certificates acquired by learners in the last 24 hours in your department.
insights.label.learning.hours.across=Learners have completed {0} hours of learning in the past 24 hours.
insights.label.learning.hours.your.department=Learners have completed {0} hours of learning in the past 24 hours in your department.

#Knowledge Base API Endpoints
km.base.host=http://knowledge-mw-service:5000/
km.base.framework.path=action/framework/v3/read/
km.base.composite.search.path=v1/search

#Taxonomy Framework and Category
igot.taxonomy.framework.name=igot
igot.taxonomy.category.name=Taxonomy

#FRAC EndPoints
frac.node.path=frac/addDataNodeBulk
frac.activity.path=frac/addDataNode
frac.search.path=frac/searchNodes
frac.node.source=WAT
frac.node.source.useDeptName=false

#Hierarchy end point
content-service-host=http://content-service:9000/
content-hierarchy-endpoint=content/v3/hierarchy
content-create-endpoint=content/v3/create
content-upload-endpoint=content/v3/upload/{identifier}
content-hierarchy-detail=v1/course/hierarchy/{courseId}?hierarchyType={hierarchyType}
#QR Code Properties
course.batch.create.endpoint=v1/course/batch/create
user.course.list=v1/user/courses/list/{userUUID}?orgdetails=orgName,email&licenseDetails=name,description,url&fields=contentType,topic,name,channel,mimeType,appIcon,gradeLevel,resourceType,identifier,medium,pkgVersion,board,subject,trackable,posterImage,duration,creatorLogo,license&batchDetails=name,endDate,startDate,status,enrollmentType,createdBy,certificates
user.course.enroll=v1/course/enroll

html.store.path=/tmp/htmlFiles
pdf.store.path=/tmp/pdfFiles
pdf.draft.template.name=workallocationdraft
pdf.published.template.name=workallocationpublished
content.default.channelId=0131397178949058560
content.default.orgId=igot-karmayogi
sunbird.telemetry.base.url=http://telemetry-service:9001/
sunbird.telemetry.endpoint=v1/telemetry
wat.telemetry.env=dev.mdo.portal
sunbird.user.search.endpoint=private/user/v1/search

#Cache Expire time in Seconds. Idle value - 86400 (i.e. everyDay)
cache.max.ttl=86400

#Assessment Feature values
assessment.host=http://assessment-service:9000/
assessment.hierarchy.read.path=questionset/v4/hierarchy/{identifier}?mode=edit
assessment.question.list.path=question/v4/list

#assessment.host=https://{{ domain_name }}/api/
#assessment.hierarchy.read.path=questionset/v1/hierarchy/{identifier}?hierarchy=detail
#assessment.question.list.path=question/v1/list

accesstoken.publickey.basepath=/keys/
course.url=https://{{ domain_name }}/app/toc/
overview.batch=/overview?batchId=0134907394218721281
sender.mail={{ igot_cb_ext_mailsender }}
notification.event.endpoint=/v1/notification/send/sync
notification.service.host=http://notification-service:9000
last.access.time.gap.millis=259200000

cassandra.config.host={{ sunbird_cassandra_db_host }}
user.registration.domain=yopmail.com
user.registration.dept.exclude.list=
user.registration.domain.name={{user_reg_domain_name}}
user.registration.preApproved.domain={{preapproved_domain}}
user.registration.custodian.orgId={{reg_orgid}}

sunbird_cassandra_consistency_level=quorum

sb.es.host={{ sb_es_host }}
sb.es.port={{ sb_es_port }}
sb.es.username={{ sb_es_username }}
sb.es.password={{ sb_es_password }}
sb.es.user.profile.index=user_alias
es.user.auto.complete.search.fields=profileDetails.personalDetails.primaryEmail,profileDetails.personalDetails.firstname
es.user.auto.complete.include.fields=maskedPhone,rootOrgName,roles,channel,prevUsedPhone,updatedDate,stateValidated,isDeleted,organisations,managedBy,countryCode,flagsValue,id,recoveryEmail,identifier,updatedBy,phoneVerified,locationIds,recoveryPhone,rootOrgId,userId,userSubType,prevUsedEmail,emailVerified,firstName,profileLocation,createdDate,framework,tncAcceptedOn,allTncAccepted,profileDetails,createdBy,phone,profileUserType,dob,userType,tncAcceptedVersion,status

content.search=v1/content/search
new.courses.scheduler.time.gap=168
new.courses.email.limit=10000
recipient.new.course.email=juhi.agarwal@tarento.com,reshma.prasad@tarento.com
search.fields=name,appIcon,instructions,description,purpose,mimeType,gradeLevel,identifier,medium,pkgVersion,board,subject,resourceType,primaryCategory,contentType,channel,organisation,trackable,license,posterImage,idealScreenSize,learningMode,creatorLogo,duration,version
sso.url=https://{{ domain_name }}/auth/
sso.realm={{ keycloak_sso_realm }}
send.incomplete.courses.alert=false
send.latest.courses.alert=true
get.user.email.list.from.es=true
#search.fields=name,appIcon,instructions,description,purpose,mimeType,gradeLevel,identifier,medium,pkgVersion,board,subject,resourceType,primaryCategory,contentType,channel,organisation,trackable,license,posterImage,idealScreenSize,learningMode,creatorLogo,duration,version
email.search.fields=userId,profileDetails.personalDetails.primaryEmail
incompleteCourseAlertEmailKey=courseReminder
latestCourseAlertEmailKey=latestCourse


user.bulk.upload.email.template=bulkUploadNotification

# Need to specify the list of user emails which require to be notified for bulk upload.
# For iGOT Stage check with iGOT QA team.
# For NIC - need to provide NOC team email address.
user.bulk.upload.email.notification.list={{ bulk_upload_email_notification_list }}

user.bulk.upload.email.notification.subject=Request for bulk upload User!


#Course Alert Notifications
incomplete.course.alert.message.key=courseReminder
latest.course.alert.message.key=latestCourse

#Incomplete Course Alert Email
#Set the following property to true to enable incomplete course alert email
incomplete.courses.alert.enabled=false
incomplete.courses.alert.last.access.time.mills=259200000

#Latest Courses Alert Email Config
latest.courses.alert.enabled=true

#Provide a list of user emails which require to be sent the latest course email.
latest.courses.alert.user.email.list=

#Enable the following if you want to send the latest course email to all users.
latest.courses.alert.send.to.all.user=false

latest.courses.alert.content.limit=8
latest.courses.alert.search.user.fields=userId,profileDetails.personalDetails.primaryEmail
latest.courses.alert.search.content.fields=identifier,name,posterImage,duration,description

latest.courses.alert.email.subject=Check out exciting new courses that launched this week!

latest.courses.alert.scheduler.time.gap=100

latest.courses.alert.content.min.limit=1

sb.env.chiper.password={{cipher_password}}

sb.es.user.notification.preference.index=notify_preference

assessment.read.assessmentLevel.params=name,identifier,primaryCategory,versionKey,mimeType,code,version,objectType,status,expectedDuration,totalQuestions,maxQuestions,description,maxAssessmentRetakeAttempts,competencies_v3,assessmentType,sectionTimeBound,showMarks,questionParagraph,sectionType
assessment.read.sectionLevel.params=parent,name,identifier,description,trackable,primaryCategory,versionKey,mimeType,code,version,objectType,status,index,maxQuestions,scoreCutoffType,minimumPassPercentage,additionalInstructions,sectionLevelDefinition,assessmentType,expectedDuration,questionParagraph,sectionType
assessment.read.questionLevel.params=parent,name,identifier,primaryCategory,body,versionKey,mimeType,code,objectType,status,qType,index,showSolutions,allowAnonymousAccess,visibility,version,showFeedback,license,questionLevel,expectedDuration,totalMarks

assessment.read.min.question.params=parent,name,identifier,primaryCategory,versionKey,mimeType,objectType,qType

user.assessment.submission.duration=120
kafka.topics.user.assessment.submit={{env}}.assessment.submit
sb.es.host.list={{sb_es_host_list}}
es.host.list={{es_host_list}}

kafka.topics.user.bulk.upload={{env}}.user.bulk.upload
kafka.topics.user.bulk.upload.group=userBulkUploadGroup

user.bulk.upload.status.fields=rootOrgId,identifier,fileName,filePath,dateCreatedOn,status,comment,dateUpdatedOn,totalRecords,successfulRecordsCount,failedRecordsCount

metaData.contextTypes=graduations,postGraduations,designations,gradePay,cadre,ministries,service,industries


spring.datasource.jdbc-url=jdbc:postgresql://{{ postgresql_host }}:{{ postgresql_port }}/sunbird
spring.datasource.username={{postgresql_username_sunbird }}
spring.datasource.password={{ postgresql_password_sunbird }}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=false

###Verified Karmayogi Badge
lms.system.settings.verified.profile.fields.path=v1/system/settings/get/verifiedProfileFields

es.user.report.include.fields=userId,firstName,email,phone,rootOrgId,channel,roles
user.bulk.upload.group.value=Group A,Group B,Group C,Group D,Contractual Staff,Others

assessment.hierarchy.namespace={{ env }}_hierarchy_store
kafka.topics.user.assessment.async.submit.handler={{env}}.assessment.async.submit.handler
assessment.ratake.count.verification.enabled=true

##### content Progress#####
kafka.topic.update.content.progress={{ env }}.update.content.progress
kafka.topic.update.content.progress.group=updateContentProgressAsyncHandlerGroup
progress.api.update.endpoint=/v1/content/state/admin/update

bulk.upload.tag.verification.regex=^[a-zA-Z\\\s,]+$

report.download.container.name={{ druid_gcloud_bucket }}
report.download.folder.name=standalone-reports
report.type.get.file.info=user-report,course-report,user-assessment-report-cbp,user-enrollment-report,cba-report,blended-program-report-mdo,blended-program-report-cbp,cbp-report-mdo-summary,cbp-report-mdo-enrolment,kcm-report

#Adding property for mail Template 
user.registration.welcome.email.signinLink=https://{{ domain_name }}/protected/v8/resource

user.registration.welcome.email.discoverLink=https://{{ domain_name }}/page/learn
user.registration.welcome.email.meetingLink={{ nine_to_five_meeting_link }}

#update the property 
user.registration.welcome.email.template=iGotWelcome_v4

redis.questions.read.timeout={{ redis_questions_read_timeout | default('3600') }} 
read.assess.questions.from.redis={{ read_assess_questions_from_redistrue | default('true') }}

mdo.admin.update.users=email,phone,tag,designation
 
lms.service.host=http://learner-service:9000/
lms.user.search=private/user/v1/search
hub.notification.rootOrg=igot
notify.service.host=http://notification-service:9000/
notify.service.path=v1/notification/send/sync
 
notify.email.template=notificationEmailTemplate
notification.support.mail=support@igot-dev.in
 
notification.mail.body.for.attendance=Your attendance for the #session_name in the #blended_program_name Program, held on #session_date, from #session_start_time to #session_end_time has been marked #attendance by the Program Coordinator.

content-read-endpoint=content/v4/admin/read
lms.user.update.private.path=/private/user/v1/update
batch.enrolment.return.size=250

cloud.profile.image.container.name={{ sbworkflow_cloud_storage_content_bucketname }}

redis.data.host.name={{ redis_host }}
redis.data.port={{ redis_port }}

hierarchy.store.keyspace.name={{ env }}_hierarchy_store

default.content.properties=name,identifier,competencies_v5,avgRating,primaryCategory,contentType,channel,organisation,createdFor,duration,creatorLogo,appIcon,posterImage,additionalTags,description,status,secureSettings
cb-plan.update.publish.authorized.roles=MDO_LEADER

spv_admin_channel_name=Karmayogi Bharat
spv.report.property.map={"mdo_content_completion":"AllMDOsContentCompletion.csv","user_recent_completions":"Top1LakhUsersContentCompletionLast15Days.csv","user_without_enrollment":"UsersOnboardedNotSignedUpAnyContent.csv","recent_user_without_enrollment":"UsersOnboardedLast15DaysNotSignedUpAnyContent.csv","all_prarambh_completed_users":"UsersFinishedEntirePrarambhModule.csv","prarambh_completed_users":"UsersCompleted6PrarambhCoursesPendingFullCompletion.csv","cbp_user_summary_exhaust":"CBPUserSummaryReport.csv","cbp_enrollment_exhaust":"CBPEnrollmentReport.csv","survey_questions_report":"SurveyQuestionsReport.zip","survey_status_report":"SurveyCompletedSubmissionsReport.zip"}
report.property.map={"user-report":"UserReport.csv","user-enrollment-report":"ConsumptionReport.csv","course-report":"ContentReport.csv","cba-report":"UserAssessmentReport.csv","user-assessment-report-cbp":"StandaloneAssessmentReport.csv","blended-program-report-mdo":"BlendedProgramReport.csv","blended-program-report-cbp":"BlendedProgramReport.csv","cbp-report-mdo-summary":"CBPUserSummaryReport.csv","cbp-report-mdo-enrolment":"CBPEnrollmentReport.csv","kcm-report":"ContentCompetencyMapping.csv"}
spv.report.property.subFolder.map={"AllMDOsContentCompletion.csv":"comms-console","Top1LakhUsersContentCompletionLast15Days.csv":"comms-console","UsersOnboardedNotSignedUpAnyContent.csv":"comms-console","UsersOnboardedLast15DaysNotSignedUpAnyContent.csv":"comms-console","UsersFinishedEntirePrarambhModule.csv":"comms-console","UsersCompleted6PrarambhCoursesPendingFullCompletion.csv":"comms-console","CBPUserSummaryReport.csv":"cbp-report","CBPEnrollmentReport.csv":"cbp-report","SurveyQuestionsReport.zip":"ml-report","SurveyCompletedSubmissionsReport.zip":"ml-report"}

karma.points.limit={{ karma_points_limit | default('10') }}
kafka.topics.claim.acbp.karma.points={{ env }}.user.claim.acbp.karma.points

notify.service.path.async=/v2/notification/send
kafka.topic.cbplan.content.request={{ env }}.cbplan.content.request
kafka.topic.cbplan.content.request.group=cbplanContentRequestAsyncHandlerGroup
cbplan.content.request.notification.template=cbplanContentRequestTemplate
user.registration.welcome.email.profileUpdateLink=https://{{ domain_name }}/app/user-profile/details

report.property.file.allMdo=ContentCompetencyMapping.csv
km.base.composite.search.fields=appIcon,channel,contentType,description,duration,idealScreenSize,identifier,instructions,license,mimeType,name,objectType,organisation,pkgVersion,posterImage,primaryCategory,purpose,version,resourceCategory,cloudStorageKey,artifactUrl,bannerLanguage,bannerPlacement,sequenceId,creatorLogo
es.default.result.limit=250

sb.role.read=/v1/user/role/read/

secret.key.token.validation={{ secret_key_token_validation }}

digilocker-issuer-id={{ digilocker_issuer_id }}
digilocker-api-key={{ digilocker_api_key }}

pdf-generator-service-host=http://pdf-generator-service:3000
pdf-generator-svg-to-pdf-url=/public/v8/course/batch/cert/download/mobile

operational.report.folder.name=standalone-reports/merged
operational.report.file.name=reports.zip
operational.reports.passwordlength=5
operational.reports.unzip.password={{ operational_reports_unzip_password }}

cert-registry-certificate-download-url=/certs/v2/registry/download/

domain.url=https://{{ domain_name }}/

payload.to.redis.key.mapping='{"TOP":"dashboard_top_10_courses_by_completion_by_course_org","FEATURED":"featured"}'

organisation.insights.fields={{ organisation_insights_fields }}
organisation.insights.redis.key.mapping={"Courses Available":"dashboard_live_course_moderated_course_count_by_course_org","Course Enrolments":"dashboard_course_moderated_course_enrolment_count_by_course_org","Course Completions":"dashboard_course_moderated_course_certificates_generated_count_by_course_org","Average Course Rating":"dashboard_course_moderated_course_average_rating_by_course_org"}
organisation.insights.property.fields={"valueColor": "#FFFFFF","labelColor": "#000000","linebreak":"true","background":"banner-metrics","iconColor": "#FFFFFF","iconBackgroupColorV2":"#FFFFFF","labelColorV2": "#FFFFFF","valueColorV2": "#F3962F","valueColorMobV2": "#FFFFFF","backgroundV2": "#1B4CA1"}
cloud.public.store.container.name={{ sbworkflow_cloud_storage_content_bucketname }}

user.bulk.upload.gender.value=Male,Female,Others
user.bulk.upload.category.value=General,OBC,SC,ST,EWS

insights.mapping.key={"PROVIDER_INSIGHT":"organisation","MDO_INSIGHT":"mdo"}
mdo.insights.fields={{ mdo_insights_fields }}
mdo.insights.property.fields={"valueColor": "#FFFFFF","labelColor": "#FFFFFF","linebreak":"false","background": "#1B4CA1","iconColor": "#FFFFFF"}
mdo.insights.redis.key.mapping={"Total Users":"dashboard_rolled_up_user_count", "Daily Logins":"dashboard_rolled_up_login_percent_last_24_hrs", "Certificates":"dashboard_rolled_up_certificates_generated_count", "Enrolments":"dashboard_rolled_up_enrolment_content_count"}
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB
#SearchService
sb.search.service.host=http://search-service:9000
sb.composite.v4.search=/v4/search

spv.full.report.folder.name=full_report
spv.full.report.file.name=reports.zip

master.competency.framework.name={{kcmframeworkname}}
bulk.upload.competency.your.workspace.name=Your Workspace
bulk.upload.competency.reference.workspace.name=Reference Sheet Competency
bulk.upload.master.designation.workspace.name=Org Designation master
bulk.upload.competency.designation.file.name=bulkUploadMasterData.xlsx
competency.designation.bulk.upload.container.name=competencyDesignation

kafka.topics.competency.designation.bulk.upload.event={{env}}.competency.designation.bulk.upload
kafka.topics.competency.designation.bulk.upload.event.group=competencyDesignationBulkUpload
designation.competency.bulk.upload.update.threshold.value=10

competency.selected.version=competencies_v6
competency.selected.version.facets.map={"competencies_v6":"competencies_v6.competencyAreaName,competencies_v6.competencyThemeName,competencies_v6.competencySubThemeName","competencies_v5":"competencies_v5.competencyArea,competencies_v5.competencyTheme,competencies_v5.competencySubTheme"}
national.learning.insights.fields={{ national_learning_insights_fields }}
national.learning.insights.property.fields={"valueColor": "#FFFFFF","labelColor": "#FFFFFF","linebreak":"false","background": "#1B4CA1","iconColor": "#FFFFFF"}
national.learning.insights.redis.key.mapping={"Certificate Issued Yesterday":"dashboard_content_certificates_generated_yday_nlw_count","Total Certificate Issued So Far":"dashboard_content_certificates_generated_nlw_count","Events Published":"dashboard_events_published_nlw_count","Total Enrolments":"dashboard_content_enrolment_nlw_count"}

#cbPoresService
cb.pores.service.host=http://cb-pores-service:7001
cb.pores.master.designation.endpoint=/designation/search
sample.file.master.designation.workspace.name=Master
Designationsample.bulk.upload.designation.file.name=bulkUploadDesignationMasterData.xlsx
org.designation.bulk.upload.container.name=orgDesignation
kafka.topics.org.designation.bulk.upload.event={{env}}.org.designation.bulk.upload
kafka.topics.org.designation.bulk.upload.event.group=orgDesignationBulkUpload
redis.master.data.read.timeout=3600

kafka.topics.cqf.assessment.postpublish={{env}}.questionset.postpublish
kafka.groupId.cqf.assessment.postpublish={{env}}-cqf-publish-group

spring.kafka.public.assessment.topic.name={{env}}.public.assessment.cert.generation.post.process
spring.kafka.public.assessment.consumer.group.id=public.assessment.cert.generation.post.process
public.assessment.cloud.certificate.folder.name=public-assessment-certificate
 
public-assessment-service-host=http://public-assessment-service:8090
public-assessment-email-notify-url=/assessment/notify

user.registration.custodian.orgName=iGOT

public.assessment.encryption.key={{public_assessment_service_encryption_key}}
spring.kafka.public.assessment.notification.topic.name={{env}}.public.assessment.cert.generation.email
public.user.assessment.table.name={{ public_assessment_service_assessment_data }}

public.user.event.bulk.onboard.topic={{env}}.public.user.event.bulk.onboard
public.user.event.bulk.onboard.topic.group=publicUserEventBulkOnboard
public.user.event.bulk.onboard.container.name=eventbulkonboard
user.issue.certificate.for.event.topic={{env}}.issue.certificate.request
user.event.enrolment.table=user_entity_enrolments
public.user.event.bulkonboard.table=public_user_event_bulkonboard

sb.csv.delimiter=,
sb.tags.delimiter=;
user.event.karma.point.topic={{env}}.user.claim.event.karma.points

cios.cloud.container.name={{cios_cloud_bucket}}
cios.cloud.folder.name=partner

framework.read.endpoint=v1/framework/read/

wingspan.datasource.jdbc-url=jdbc:postgresql://{{postgresql_host}}:{{ postgresql_port }}/{{ postgresql_wingspan_database }}
wingspan.datasource.username={{ postgresql_username_wingspan }}
wingspan.datasource.password={{ postgresql_password_wingspan }}
wingspan.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
wingspan.datasource.driver-class-name=org.postgresql.Driver
wingspan.jpa.properties.hibernate.format_sql=true
wingspan.jpa.show-sql=false
igot.es.user.form.index=fs-forms-data
es.form.index.type=_doc
bp.user.enrolment.report.container.name=gcpbpreports
kafka.topic.bp.report={{env}}.bp.report.generation

kafka.topic.bp.report.group=bpReportGenerationGroup
bp.report.default.field.map={"firstName":"Name","departmentName":"Organisation","group":"Group","designation":"Designation","employeeCode":"Employee ID","primaryEmail":"Email","mobile":"Mobile Number","gender":"Gender","dob":"Date of Birth","domicileMedium":"Mother Tongue","category":"Category","pinCode":"Office Pin Code","externalSystemId":"eHRMS ID / External System ID","dor":"Date of Retirement","cadreDetails":"Are you a Cadre Employee","civilServiceType":"Type of Service","civilServiceName":"Service","cadreName":"Cadre","cadreBatch":"Cadre Batch","cadreControllingAuthorityName":"Cadre Controlling Authority Name"}

url.custom.self.registration=https://{{domain_name}}
qr.custom.self.registration.upload.container.name={{sb_cb_ext_container}}
qr.custom.self.registration.upload.folder.name=customselfregistration-qrcodes
qr.custom.self.registration.upload.path=https://{{domain_name}}/content-store/customselfregistration-qrcodes
img.store.path=/tmp/imgFiles
qr.custom.self.registration.skip.validation=false
qr.custom.self.registration.logoupload.path=https://{{domain_name}}/content-store/customselfregistration-logo/
course.recommendation.designation.redis.key=odcs_course_recomendation
map.id.counter.enabled={{cb_ext_map_id_counter_enabled| default('disabled')}}

state.learning.insights.redis.key.mapping={"Certificate Issued Yesterday":"dashboard_certificate_generated_yday_by_ministry_slw_count","Total Certificate Issued So Far":"dashboard_certificates_generated_by_ministry_slw_count","Events Published":"dashboard_events_published_by_ministry_slw_count","Total Enrolments":"dashboard_total_enrolment_by_ministry_slw_count"}

sb.service.bulk.user.create.path=/v5/cb/user/bulkcreate
self.registration.user.endpoint.url=/v5/cb/user/self/register
custom.registration.user.endpoint.url=/v5/cb/user/custom/register

state.mdo.leader.board.size.list=XS,S,M,L,XL,XXL
mdo.leader.board.size.list=XS,S,M,L,XL

