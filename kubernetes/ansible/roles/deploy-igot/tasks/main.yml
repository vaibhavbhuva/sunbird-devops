---
- name: Including shared vars
  block:
    - name: Including shared vars
      include_vars:
        file: ../../../shared_files/vars/ui-shared.yml
  when: release_name not in ['ml-kb-portal-service','ml-template-validation-portal','ml-template-validation-backend-service','certificate-generator-service']
- include_vars:
    file: "{{chart_path}}/files/ansible_vars.yaml"

- name: template values.yaml file
  template:
    src: "{{ chart_path }}/values.j2"
    dest: "{{ chart_path }}/values.yaml"

- name: Creating env variables
  block:
    - name: template shared env file
      template:
        src: "{{ item }}"
        dest: "{{ helm_env_file_location }}/{{ item | basename}}.env"
      with_fileglob:
        - "{{ template_shared_env_file_name }}"
      when: release_name not in ['ml-kb-portal-service','pdf-generator-service','ml-template-validation-portal','ml-template-validation-backend-service','nlp-search-service']
    - name: template helm env file
      template:
        src: "{{ item }}"
        dest: "{{ helm_env_file_location }}/{{ item | basename}}.env"
      with_fileglob:
        - "{{ chart_path }}/files/*env.j2"

    - name: create env configmap
      shell: |-
        cat {{ helm_env_file_location }}/*.env > /tmp/all.env
        kubectl create configmap {{ release_name }}-config --from-env-file=/tmp/all.env -n {{namespace}} --dry-run -o=yaml | kubectl apply -f -

- name: remove env configmap file
  file:
    path: "/tmp/all.env"
    state: absent

- name: debug
  debug:
    var: role_name
- name: Creating and loading keys
  block:
    - name: Load role to decrypt private keys, copy to helm chart and encrypt private keys
      include_role:
        name: mount-keys
        tasks_from: copy-to-helm.yml

    - name: Create the token pubic key file
      copy:
        dest: "{{ chart_path }}/keys/{{ adminutil_refresh_token_public_key_kid }}"
        content: "{{ core_vault_sunbird_sso_publickey }}"
  when: release_name in [
    "cb-pores-service",
    "content-partner-provider",
    "fracentity-service",
    "pdf-generator-service",
    "profanity-filter-service",
    "sb-cb-ext-service",
    "workflow-handler-service",
    "cb-enrollment-service",
    "mentoring-service",
    "cb-comment-service",
    "cb-discussion-service",
    "cb-community-service",
    ]

- name: helm upgrade
  shell: helm upgrade --install --atomic --timeout 10m {{ release_name }} {{ chart_path }} -n {{namespace}}

- name: Get the deployment rollout status
  shell: "kubectl get deployments -A | grep -i {{ release_name }} | awk -F' ' '{print $3}' | awk -F/ '{if ($1 ~ $2){exit 0} else {exit 1}}'"
  register: task_result
  until: task_result.rc == 0
  retries: 6
  delay: 30

- name: Get deployed image name
  shell: kubectl get deployments.apps {{ release_name }} -o json -n {{ namespace }} | jq -r '.spec.template.spec.containers[0].image | split("/")[1]'
  register: deployed_image
